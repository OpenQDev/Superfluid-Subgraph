{
  "contractName": "SuperfluidGovernanceIIProxy",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialAddress",
          "type": "address"
        }
      ],
      "name": "initializeProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Superfluid IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!\",\"kind\":\"dev\",\"methods\":{\"initializeProxy(address)\":{\"details\":\"Proxy initialization function.      This should only be called once and it is permission-less.\",\"params\":{\"initialAddress\":\"Initial logic contract code address to be used.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"A proxy for governance which is both ownable and upgradable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/gov/SuperfluidGovernanceII.sol\":\"SuperfluidGovernanceIIProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x093eaf9a4b05adf2bd3730b753f9e1725ed34b80ea4b5f08477ff2f46a188586\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e9a9b37e8cb6332ed21a8d3f8a6723d897e4a97db63095424522a80b3cfc15\",\"dweb:/ipfs/QmdHcBPPGKQBnmeaAN3Y6YKUPqwR73RrHTiX5uTr6eVx1M\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/gov/SuperfluidGovernanceBase.sol\":{\"keccak256\":\"0x0809d6544bbc2535a8be017b78f134913d3451c2958a3421950df6b57c3499f1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c726eacb51fe00e96e104d7d4271ca666dbadc0b2452c068d4d31898720c0b97\",\"dweb:/ipfs/QmRXFcCEdcX7pzKuAyQjGpNChRQQQuJw1SG57nGh3KugTR\"]},\"project:/contracts/gov/SuperfluidGovernanceII.sol\":{\"keccak256\":\"0x5f369433a8a029c30f61789b1d2a6e6e86b568faa166b23422a11c4ef5e6f995\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b0dd7ea0194921c955175bea871e63a2ee90e219883e3713767c1f769942889a\",\"dweb:/ipfs/Qmc5HJBGYmL9PzJyfxqVfsE1PuauiFfFT8a824fAzZi9vE\"]},\"project:/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x199095781e4221b6015d859558da09977f79199f38d342ab4899c2cecdf8cec1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9fd3a5a8b16d8517e2af10e20390a9af5adbfa4e783e3a7dd89eb4588db98385\",\"dweb:/ipfs/QmPDtGR43DeMMVsHjUh7FYzMGsFKPpGriRkaahFpN5T5d3\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xc3a6a907245116bcecc70fe4b207454012e8ce4fa190228fb8bbe39e0b1bc5cf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://83c116bdae48685d20e5a27c942111e685ec1ef6334e7ff6f6d9af66edbd8025\",\"dweb:/ipfs/QmTnVuNTaRFiDmkAmDk7NFYdfQTW1kqgBZiY2exC6k8jDx\"]},\"project:/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x42b604992cf67321cc12e8bed16543df0db4eaf125b8c1c82c330ebbeb20c014\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7c18b00caf7b8be7e11f75284fb96263ce48a3984d56f2a91ec44cae4413d2fc\",\"dweb:/ipfs/QmWVzdW9KnkwAVe9g5zRuMoqCf7N89AoBfzzRr8puw5d8a\"]},\"project:/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xcff22ed43df0f34a645e6cbe0d7c5fd08f204d769e9095bc59d7c2fe6d11b7d6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://944b8c5a37839b40ec8ee1ccfecbaf007808a61ea16c7b1351a7184606772032\",\"dweb:/ipfs/QmbUKZqZtVfqZMKYnQUygE4svatKuN9kT2ibrnxMuWXR7n\"]},\"project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x68a466c978557e47bd7385b1d7d78f1c8fb07462a870efc5a791008e33a4f535\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d109879bdb7f022560a792af2ff481df729bf1b4b8e1831b8022f4d12892d41d\",\"dweb:/ipfs/QmRSWqHq8CP5XWgyV4mJpPxMg33s312s2K5ndHRHVqqZ8n\"]},\"project:/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xf16efd1ba72322e77e0d936b723c0e71eb14c23e11cf69efae8c7caa407012cf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ff4bb321b72dc3332984346e5b66ad131c6132101658fe6707d7a9d043f981ab\",\"dweb:/ipfs/QmXmVD2mZ3LRb7wQZ2VcrpYhtjm21zUe5hPDDDJA1WXbFz\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xea33d20751ffea4f4446bc04f6c10194fb4da0803a988586d41d49cf4859731c\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7716b1f5eec0a7ac8780d82de4f0274ecd7059be4eec46c82b0b7adce110f10b\",\"dweb:/ipfs/QmWRQafvdCBsyfDYnevXSav1AAz8uZRRBwh2be5Z3vSfVN\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x3eec5a3bf337cd319c1918fd1b16f350cf5f6850ac71f6859066fbf86e734ff4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cda19a2f5ca18e79c1e2300c8efac84c718df76c4fb313f59f84264a4c6b398a\",\"dweb:/ipfs/QmfQiwgDH5Q64w5ufBnDzVaeWv6WCZ6fLTrYu1FSYfBGhq\"]},\"project:/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x66708dae3fcd06e6fc0a46f2959fc2d1e6b9361f28598337339d26af8eb8c0f9\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://77b80718cec21b81ef190c19fb9fbe73913a95c71f7e6715f671bbe8a224dafc\",\"dweb:/ipfs/QmUdsc6DF2Bgih5VZm7sfaECjhGmwE7tAx8pMkzGQgVKQw\"]},\"project:/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x70e573644a0ff271c0ccef526809e9d9ab4950ec58755ca84e833cde3b8f3df0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://aea3709687cc37ba625f4cc882fbdb149a7bf5be5afe2b030203c8719641a77b\",\"dweb:/ipfs/QmVpvfR6ZheE5wNUK9CobaVBgVvEnEPkvjWF9cfwyZr7eQ\"]},\"project:/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0xabe3beb46dff1433d7ae61fe470fc347967d5a5b09d48fa45f35ddb2735d61f2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ad0fdb3210d3b0ed62886decdeef62b43bdbdd59bd55fc5ea3d636e97fbfb65d\",\"dweb:/ipfs/QmPjd6ehqgoiHkrf2g2h9AZRxKakqxsGx1GTiy5DSwfYJg\"]},\"project:/contracts/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0x2c651f24af9c4405c20e0a14907f76f8a0d81ff751c89ebbce48ae7aceab5f58\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://dbf209416f8af6df9949194e682a902c4cbce37520a940c5bd123d5ffb1b7b56\",\"dweb:/ipfs/QmWy7TuYgtpRddTJYCubfzthA7ex7rPrxbLuzcG6bbw7mL\"]},\"project:/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0xe624225773a60f62c7a0687afb0536ba19a17e4e5605ae71e8af77a0287aca59\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4294e5eb5b194477bca3b8ca04ca92a6fe72dd6cf8da8f0d942a4a86c41c1c7f\",\"dweb:/ipfs/QmdfPXZxJPaBjKNfC8joTcvEhWammJHzRACB1S18sFYfd7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103de8061007e6000396000f3fe6080604052600436106100435760003560e01c80634a0687ef1461005a578063715018a61461007a5780638da5cb5b1461008f578063f2fde38b146100bb57610052565b36610052576100506100db565b005b6100506100db565b34801561006657600080fd5b50610050610075366004610378565b6100ed565b34801561008657600080fd5b506100506101f3565b34801561009b57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100c757600080fd5b506100506100d6366004610378565b610205565b6100eb6100e661027b565b6102aa565b565b6001600160a01b0381166101485760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006101727f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101c85760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a65640000604482015260640161013f565b6101f0817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b6101fb6102ce565b6100eb6000610328565b61020d6102ce565b6001600160a01b0381166102725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161013f565b6101f081610328565b60006102a57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156102c9573d6000f35b3d6000fd5b6000546001600160a01b031633146100eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161013f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561038a57600080fd5b81356001600160a01b03811681146103a157600080fd5b939250505056fea2646970667358221220f7403b573538009512bba2ee8a825d2aadc1c30671ba619aea4c74fd218347f664736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80634a0687ef1461005a578063715018a61461007a5780638da5cb5b1461008f578063f2fde38b146100bb57610052565b36610052576100506100db565b005b6100506100db565b34801561006657600080fd5b50610050610075366004610378565b6100ed565b34801561008657600080fd5b506100506101f3565b34801561009b57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100c757600080fd5b506100506100d6366004610378565b610205565b6100eb6100e661027b565b6102aa565b565b6001600160a01b0381166101485760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006101727f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101c85760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a65640000604482015260640161013f565b6101f0817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b6101fb6102ce565b6100eb6000610328565b61020d6102ce565b6001600160a01b0381166102725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161013f565b6101f081610328565b60006102a57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156102c9573d6000f35b3d6000fd5b6000546001600160a01b031633146100eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161013f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561038a57600080fd5b81356001600160a01b03811681146103a157600080fd5b939250505056fea2646970667358221220f7403b573538009512bba2ee8a825d2aadc1c30671ba619aea4c74fd218347f664736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1989:106",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:106",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:106",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:106",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:106",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:106",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:106"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:106"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:106"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:106"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:106"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:106",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:106"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:106"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:106",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:106"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:106"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:106",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:106",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:106",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:106",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:106"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:106"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:106"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:106"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:106"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:106",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:106",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:106"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:106"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:106",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:106"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:106"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:106"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:106"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:106"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:106"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:106"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:106",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:106"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:106"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:106",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:106",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:106",
                "type": ""
              }
            ],
            "src": "14:286:106"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:102:106",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "416:26:106",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "428:9:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:106",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:18:106"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "416:4:106"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:106"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "473:6:106"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "489:3:106",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "494:1:106",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "485:3:106"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "485:11:106"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "498:1:106",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "481:3:106"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "481:19:106"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "469:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "469:32:106"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:51:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:51:106"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "375:9:106",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:106",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "397:4:106",
                "type": ""
              }
            ],
            "src": "305:203:106"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "687:173:106",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "704:9:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "715:2:106",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "697:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:21:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "697:21:106"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:106"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "749:2:106",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:18:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "754:2:106",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "727:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:30:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "727:30:106"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "777:9:106"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "788:2:106",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:18:106"
                      },
                      {
                        "hexValue": "5555505350726f78793a207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "793:25:106",
                        "type": "",
                        "value": "UUPSProxy: zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:53:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "766:53:106"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "828:26:106",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "840:9:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "851:2:106",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "836:3:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:18:106"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "828:4:106"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddef727975921b7952b7e20fd4290233907fcf50863b08b5223d979ede27321e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "664:9:106",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "678:4:106",
                "type": ""
              }
            ],
            "src": "513:347:106"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1039:180:106",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1056:9:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1067:2:106",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1049:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1049:21:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1049:21:106"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1090:9:106"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1101:2:106",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1086:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1086:18:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1106:2:106",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1079:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:30:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1079:30:106"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1129:9:106"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1140:2:106",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:18:106"
                      },
                      {
                        "hexValue": "5555505350726f78793a20616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1145:32:106",
                        "type": "",
                        "value": "UUPSProxy: already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1118:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1118:60:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1118:60:106"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1187:26:106",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1199:9:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:2:106",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1195:3:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1195:18:106"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1187:4:106"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b83493ae559d613bdaa11f876d4e817b661ed75187e4a486b85abafea5a50e6c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1016:9:106",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1030:4:106",
                "type": ""
              }
            ],
            "src": "865:354:106"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:228:106",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1415:9:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1426:2:106",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1408:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:21:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1408:21:106"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1449:9:106"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1460:2:106",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1445:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1445:18:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:2:106",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1438:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:30:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1438:30:106"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1488:9:106"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:2:106",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:18:106"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1504:34:106",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1477:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:62:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:62:106"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1559:9:106"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1570:2:106",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1555:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1555:18:106"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1575:8:106",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1548:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1548:36:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1548:36:106"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1593:27:106",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1605:9:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1616:3:106",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1601:3:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1601:19:106"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1593:4:106"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1375:9:106",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1389:4:106",
                "type": ""
              }
            ],
            "src": "1224:402:106"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1805:182:106",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1822:9:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1833:2:106",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1815:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:21:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1815:21:106"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1856:9:106"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1867:2:106",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:18:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:2:106",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1845:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:30:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1845:30:106"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1895:9:106"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:2:106",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1891:3:106"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:18:106"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1911:34:106",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1884:6:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:62:106"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1884:62:106"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1955:26:106",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1967:9:106"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:2:106",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1963:3:106"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:18:106"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1955:4:106"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1782:9:106",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1796:4:106",
                "type": ""
              }
            ],
            "src": "1631:356:106"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ddef727975921b7952b7e20fd4290233907fcf50863b08b5223d979ede27321e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"UUPSProxy: zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b83493ae559d613bdaa11f876d4e817b661ed75187e4a486b85abafea5a50e6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"UUPSProxy: already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 106,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "654:62:39:-:0;;;;;;;;;;;;-1:-1:-1;936:32:4;719:10:20;936:18:4;:32::i;:::-;654:62:39;;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;654:62:39:-;;;;;;;",
  "deployedSourceMap": "654:62:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:5;:9;:11::i;:::-;654:62:39;;2675:11:5;:9;:11::i;897:285:95:-;;;;;;;;;;-1:-1:-1;897:285:95;;;;;:::i;:::-;;:::i;1831:101:4:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:4;1273:6;1201:85;;;-1:-1:-1;;;;;1273:6:4;;;451:51:106;;1201:85:4;;;;;439:2:106;1201:85:4;;;2081:198;;;;;;;;;;-1:-1:-1;2081:198:4;;;;;:::i;:::-;;:::i;2322:110:5:-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;897:285:95:-;-1:-1:-1;;;;;973:28:95;;965:64;;;;-1:-1:-1;;;965:64:95;;715:2:106;965:64:95;;;697:21:106;754:2;734:18;;;727:30;793:25;773:18;;;766:53;836:18;;965:64:95;;;;;;;;;1085:1;1047:26;751:20:96;745:27;;618:170;1047:26:95;-1:-1:-1;;;;;1047:40:95;;1039:83;;;;-1:-1:-1;;;1039:83:95;;1067:2:106;1039:83:95;;;1049:21:106;1106:2;1086:18;;;1079:30;1145:32;1125:18;;;1118:60;1195:18;;1039:83:95;865:354:106;1039:83:95;1132:43;1160:14;988:20:96;964:87;839:228;1132:43:95;897:285;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;2081:198::-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;1426:2:106;2161:73:4::1;::::0;::::1;1408:21:106::0;1465:2;1445:18;;;1438:30;1504:34;1484:18;;;1477:62;-1:-1:-1;;;1555:18:106;;;1548:36;1601:19;;2161:73:4::1;1224:402:106::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;1238:130:95:-:0;1305:7;1335:26;751:20:96;745:27;;618:170;1335:26:95;1328:33;;1238:130;:::o;948:895:5:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;1359:130:4;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:20;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;1833:2:106;1414:68:4;;;1815:21:106;;;1852:18;;;1845:30;1911:34;1891:18;;;1884:62;1963:18;;1414:68:4;1631:356:106;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:286:106:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:106;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:106:o",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity 0.8.14;\n\nimport { UUPSProxy } from \"../upgradability/UUPSProxy.sol\";\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { UUPSProxiable } from \"../upgradability/UUPSProxiable.sol\";\nimport { SuperfluidGovernanceBase } from \"./SuperfluidGovernanceBase.sol\";\nimport { ISuperfluid } from \"../interfaces/superfluid/ISuperfluid.sol\";\n\n/**\n * @title A proxy for governance which is both ownable and upgradable\n * @author Superfluid\n * IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!\n */\n// solhint-disable-next-line no-empty-blocks\ncontract SuperfluidGovernanceIIProxy is Ownable, UUPSProxy { }\n\ncontract SuperfluidGovernanceII is\n    Ownable,\n    UUPSProxiable,\n    SuperfluidGovernanceBase\n{\n    function _requireAuthorised() private view {\n        require(owner() == _msgSender(), \"SFGovII: only owner is authorized\");\n    }\n\n    /**************************************************************************\n    * UUPSProxiable\n    **************************************************************************/\n\n    // TODO: do we need initialize() here?\n\n    function proxiableUUID() public pure override returns (bytes32) {\n        return keccak256(\"org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation\");\n    }\n\n    function updateCode(address newAddress)\n        external override\n    {\n        _requireAuthorised();\n        _updateCodeAddress(newAddress);\n    }\n\n    /**************************************************************************\n    * SuperfluidGovernanceBase\n    **************************************************************************/\n\n    function _requireAuthorised(ISuperfluid /*host*/)\n        internal view override\n    {\n        _requireAuthorised();\n    }\n}\n",
  "sourcePath": "/Users/alo/protocol-monorepo/packages/ethereum-contracts/contracts/gov/SuperfluidGovernanceII.sol",
  "ast": {
    "absolutePath": "project:/contracts/gov/SuperfluidGovernanceII.sol",
    "exportedSymbols": {
      "ISuperfluid": [
        20012
      ],
      "Ownable": [
        655
      ],
      "SuperfluidGovernanceBase": [
        17657
      ],
      "SuperfluidGovernanceII": [
        17731
      ],
      "SuperfluidGovernanceIIProxy": [
        17675
      ],
      "UUPSProxiable": [
        36545
      ],
      "UUPSProxy": [
        36602
      ]
    },
    "id": 17732,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17659,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:39"
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxy.sol",
        "file": "../upgradability/UUPSProxy.sol",
        "id": 17661,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17732,
        "sourceUnit": 36603,
        "src": "60:59:39",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17660,
              "name": "UUPSProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36602,
              "src": "69:9:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 17663,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17732,
        "sourceUnit": 656,
        "src": "120:69:39",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17662,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 655,
              "src": "129:7:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxiable.sol",
        "file": "../upgradability/UUPSProxiable.sol",
        "id": 17665,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17732,
        "sourceUnit": 36546,
        "src": "190:67:39",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17664,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36545,
              "src": "199:13:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/gov/SuperfluidGovernanceBase.sol",
        "file": "./SuperfluidGovernanceBase.sol",
        "id": 17667,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17732,
        "sourceUnit": 17658,
        "src": "258:74:39",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17666,
              "name": "SuperfluidGovernanceBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 17657,
              "src": "267:24:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "../interfaces/superfluid/ISuperfluid.sol",
        "id": 17669,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17732,
        "sourceUnit": 20013,
        "src": "333:71:39",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17668,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 20012,
              "src": "342:11:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17671,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 655,
              "src": "694:7:39"
            },
            "id": 17672,
            "nodeType": "InheritanceSpecifier",
            "src": "694:7:39"
          },
          {
            "baseName": {
              "id": 17673,
              "name": "UUPSProxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36602,
              "src": "703:9:39"
            },
            "id": 17674,
            "nodeType": "InheritanceSpecifier",
            "src": "703:9:39"
          }
        ],
        "canonicalName": "SuperfluidGovernanceIIProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 17670,
          "nodeType": "StructuredDocumentation",
          "src": "406:202:39",
          "text": " @title A proxy for governance which is both ownable and upgradable\n @author Superfluid\n IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!"
        },
        "fullyImplemented": true,
        "id": 17675,
        "linearizedBaseContracts": [
          17675,
          36602,
          707,
          655,
          2709
        ],
        "name": "SuperfluidGovernanceIIProxy",
        "nameLocation": "663:27:39",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 17732,
        "src": "654:62:39",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17676,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 655,
              "src": "757:7:39"
            },
            "id": 17677,
            "nodeType": "InheritanceSpecifier",
            "src": "757:7:39"
          },
          {
            "baseName": {
              "id": 17678,
              "name": "UUPSProxiable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36545,
              "src": "770:13:39"
            },
            "id": 17679,
            "nodeType": "InheritanceSpecifier",
            "src": "770:13:39"
          },
          {
            "baseName": {
              "id": 17680,
              "name": "SuperfluidGovernanceBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17657,
              "src": "789:24:39"
            },
            "id": 17681,
            "nodeType": "InheritanceSpecifier",
            "src": "789:24:39"
          }
        ],
        "canonicalName": "SuperfluidGovernanceII",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 17731,
        "linearizedBaseContracts": [
          17731,
          17657,
          20135,
          36545,
          858,
          655,
          2709
        ],
        "name": "SuperfluidGovernanceII",
        "nameLocation": "727:22:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 17693,
              "nodeType": "Block",
              "src": "863:86:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 17685,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "881:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 17686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "881:7:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 17687,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2699,
                            "src": "892:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 17688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "892:12:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "881:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5346476f7649493a206f6e6c79206f776e657220697320617574686f72697a6564",
                        "id": 17690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "906:35:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aeb7dc15ae4cc3c032bf5ff218fe6f9b3d4f84315de3c3814f51b0a4d36d98df",
                          "typeString": "literal_string \"SFGovII: only owner is authorized\""
                        },
                        "value": "SFGovII: only owner is authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aeb7dc15ae4cc3c032bf5ff218fe6f9b3d4f84315de3c3814f51b0a4d36d98df",
                          "typeString": "literal_string \"SFGovII: only owner is authorized\""
                        }
                      ],
                      "id": 17684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "873:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:69:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17692,
                  "nodeType": "ExpressionStatement",
                  "src": "873:69:39"
                }
              ]
            },
            "id": 17694,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireAuthorised",
            "nameLocation": "829:18:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:2:39"
            },
            "returnParameters": {
              "id": 17683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:0:39"
            },
            "scope": 17731,
            "src": "820:129:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              36485
            ],
            "body": {
              "id": 17704,
              "nodeType": "Block",
              "src": "1244:107:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e5375706572666c756964476f7665726e616e636549492e696d706c656d656e746174696f6e",
                        "id": 17701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1271:72:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42262e3b6ca1f8f82e158e1ac4ddf4e6273aa6499266ae17bcaceb2383054239",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_42262e3b6ca1f8f82e158e1ac4ddf4e6273aa6499266ae17bcaceb2383054239",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation\""
                        }
                      ],
                      "id": 17700,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1261:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 17702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1261:83:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 17699,
                  "id": 17703,
                  "nodeType": "Return",
                  "src": "1254:90:39"
                }
              ]
            },
            "functionSelector": "52d1902d",
            "id": 17705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "1189:13:39",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17696,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1217:8:39"
            },
            "parameters": {
              "id": 17695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:2:39"
            },
            "returnParameters": {
              "id": 17699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17698,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17705,
                  "src": "1235:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17697,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1234:9:39"
            },
            "scope": 17731,
            "src": "1180:171:39",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              36479
            ],
            "body": {
              "id": 17718,
              "nodeType": "Block",
              "src": "1427:77:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17711,
                      "name": "_requireAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17694,
                        17730
                      ],
                      "referencedDeclaration": 17694,
                      "src": "1437:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 17712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:20:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17713,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:20:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17715,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17707,
                        "src": "1486:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17714,
                      "name": "_updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36538,
                      "src": "1467:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 17716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:30:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17717,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:30:39"
                }
              ]
            },
            "functionSelector": "46951954",
            "id": 17719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCode",
            "nameLocation": "1366:10:39",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17709,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1414:8:39"
            },
            "parameters": {
              "id": 17708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17707,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "1385:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 17719,
                  "src": "1377:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1376:20:39"
            },
            "returnParameters": {
              "id": 17710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1427:0:39"
            },
            "scope": 17731,
            "src": "1357:147:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17656
            ],
            "body": {
              "id": 17729,
              "nodeType": "Block",
              "src": "1787:37:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17726,
                      "name": "_requireAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17694,
                        17730
                      ],
                      "referencedDeclaration": 17694,
                      "src": "1797:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 17727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:20:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17728,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:20:39"
                }
              ]
            },
            "id": 17730,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireAuthorised",
            "nameLocation": "1711:18:39",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17724,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1774:8:39"
            },
            "parameters": {
              "id": 17723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17722,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17730,
                  "src": "1730:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$20012",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 17721,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 17720,
                      "name": "ISuperfluid",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20012,
                      "src": "1730:11:39"
                    },
                    "referencedDeclaration": 20012,
                    "src": "1730:11:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$20012",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1729:22:39"
            },
            "returnParameters": {
              "id": 17725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1787:0:39"
            },
            "scope": 17731,
            "src": "1702:122:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 17732,
        "src": "718:1108:39",
        "usedErrors": []
      }
    ],
    "src": "35:1792:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-15T06:25:31.389Z",
  "devdoc": {
    "author": "Superfluid IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!",
    "kind": "dev",
    "methods": {
      "initializeProxy(address)": {
        "details": "Proxy initialization function.      This should only be called once and it is permission-less.",
        "params": {
          "initialAddress": "Initial logic contract code address to be used."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "A proxy for governance which is both ownable and upgradable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}